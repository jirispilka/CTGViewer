# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindowUI.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(1029, 526)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.gridLayout_2 = QtGui.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.gridLayout = QtGui.QGridLayout()
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.PlotWidget = PlotWidget(self.centralwidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PlotWidget.sizePolicy().hasHeightForWidth())
        self.PlotWidget.setSizePolicy(sizePolicy)
        self.PlotWidget.setAutoFillBackground(False)
        self.PlotWidget.setObjectName(_fromUtf8("PlotWidget"))
        self.gridLayout.addWidget(self.PlotWidget, 0, 0, 3, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1029, 30))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        self.menuView = QtGui.QMenu(self.menubar)
        self.menuView.setObjectName(_fromUtf8("menuView"))
        self.menuPaper_format = QtGui.QMenu(self.menuView)
        self.menuPaper_format.setObjectName(_fromUtf8("menuPaper_format"))
        self.menuAnnotation_Toolbar = QtGui.QMenu(self.menuView)
        self.menuAnnotation_Toolbar.setObjectName(_fromUtf8("menuAnnotation_Toolbar"))
        self.menuTools = QtGui.QMenu(self.menubar)
        self.menuTools.setObjectName(_fromUtf8("menuTools"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.dockClinInfo = QtGui.QDockWidget(MainWindow)
        self.dockClinInfo.setObjectName(_fromUtf8("dockClinInfo"))
        self.dockClinInfoContents = QtGui.QWidget()
        self.dockClinInfoContents.setObjectName(_fromUtf8("dockClinInfoContents"))
        self.dockClinInfo.setWidget(self.dockClinInfoContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockClinInfo)
        self.dockDataBrowser = QtGui.QDockWidget(MainWindow)
        self.dockDataBrowser.setObjectName(_fromUtf8("dockDataBrowser"))
        self.dockWidgetContents = QtGui.QWidget()
        self.dockWidgetContents.setObjectName(_fromUtf8("dockWidgetContents"))
        self.dockDataBrowser.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockDataBrowser)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.toolBar.setFont(font)
        self.toolBar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.toolBar.setMovable(True)
        self.toolBar.setAllowedAreas(QtCore.Qt.AllToolBarAreas)
        self.toolBar.setIconSize(QtCore.QSize(22, 22))
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionOpen = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/document-open-3.png")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionOpen.setIcon(icon)
        self.actionOpen.setStatusTip(_fromUtf8(""))
        self.actionOpen.setObjectName(_fromUtf8("actionOpen"))
        self.actionClose = QtGui.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/document-close-3.png")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionClose.setIcon(icon1)
        self.actionClose.setObjectName(_fromUtf8("actionClose"))
        self.actionQuit = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/application-exit-4.png")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionQuit.setIcon(icon2)
        self.actionQuit.setObjectName(_fromUtf8("actionQuit"))
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.actionConvert_files = QtGui.QAction(MainWindow)
        self.actionConvert_files.setObjectName(_fromUtf8("actionConvert_files"))
        self.actionOpen_folder = QtGui.QAction(MainWindow)
        self.actionOpen_folder.setObjectName(_fromUtf8("actionOpen_folder"))
        self.actionAttribute_selection = QtGui.QAction(MainWindow)
        self.actionAttribute_selection.setObjectName(_fromUtf8("actionAttribute_selection"))
        self.actionDownload_CTU_UHB_data = QtGui.QAction(MainWindow)
        self.actionDownload_CTU_UHB_data.setObjectName(_fromUtf8("actionDownload_CTU_UHB_data"))
        self.actionData_browser = QtGui.QAction(MainWindow)
        self.actionData_browser.setCheckable(True)
        self.actionData_browser.setObjectName(_fromUtf8("actionData_browser"))
        self.actionExport_to_PDF = QtGui.QAction(MainWindow)
        self.actionExport_to_PDF.setEnabled(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/pdf_icon2.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_to_PDF.setIcon(icon3)
        self.actionExport_to_PDF.setObjectName(_fromUtf8("actionExport_to_PDF"))
        self.actionEU = QtGui.QAction(MainWindow)
        self.actionEU.setCheckable(True)
        self.actionEU.setObjectName(_fromUtf8("actionEU"))
        self.actionUS = QtGui.QAction(MainWindow)
        self.actionUS.setCheckable(True)
        self.actionUS.setObjectName(_fromUtf8("actionUS"))
        self.actionSet_Clear_Baseline = QtGui.QAction(MainWindow)
        self.actionSet_Clear_Baseline.setObjectName(_fromUtf8("actionSet_Clear_Baseline"))
        self.actionBasal = QtGui.QAction(MainWindow)
        self.actionBasal.setCheckable(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/basal.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBasal.setIcon(icon4)
        self.actionBasal.setObjectName(_fromUtf8("actionBasal"))
        self.actionBaseline = QtGui.QAction(MainWindow)
        self.actionBaseline.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/baseline.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBaseline.setIcon(icon5)
        self.actionBaseline.setObjectName(_fromUtf8("actionBaseline"))
        self.actionRecovery = QtGui.QAction(MainWindow)
        self.actionRecovery.setCheckable(True)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/recovery.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRecovery.setIcon(icon6)
        self.actionRecovery.setObjectName(_fromUtf8("actionRecovery"))
        self.actionCursor = QtGui.QAction(MainWindow)
        self.actionCursor.setCheckable(True)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/cursor.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCursor.setIcon(icon7)
        self.actionCursor.setObjectName(_fromUtf8("actionCursor"))
        self.actionNote = QtGui.QAction(MainWindow)
        self.actionNote.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/note.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNote.setIcon(icon8)
        self.actionNote.setObjectName(_fromUtf8("actionNote"))
        self.actionSave = QtGui.QAction(MainWindow)
        self.actionSave.setEnabled(False)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/save_icon.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon9)
        self.actionSave.setObjectName(_fromUtf8("actionSave"))
        self.actionDelete = QtGui.QAction(MainWindow)
        self.actionDelete.setEnabled(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/recycle_bin.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete.setIcon(icon10)
        self.actionDelete.setObjectName(_fromUtf8("actionDelete"))
        self.actionSent_annotations = QtGui.QAction(MainWindow)
        self.actionSent_annotations.setObjectName(_fromUtf8("actionSent_annotations"))
        self.actionNo_recovery = QtGui.QAction(MainWindow)
        self.actionNo_recovery.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/no_recovery.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNo_recovery.setIcon(icon11)
        self.actionNo_recovery.setObjectName(_fromUtf8("actionNo_recovery"))
        self.actionEllipse = QtGui.QAction(MainWindow)
        self.actionEllipse.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/ellipse-icon.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEllipse.setIcon(icon12)
        self.actionEllipse.setObjectName(_fromUtf8("actionEllipse"))
        self.actionExcessive_UA = QtGui.QAction(MainWindow)
        self.actionExcessive_UA.setCheckable(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/excessive_ua.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExcessive_UA.setIcon(icon13)
        self.actionExcessive_UA.setObjectName(_fromUtf8("actionExcessive_UA"))
        self.actionAnnToolbarVisible = QtGui.QAction(MainWindow)
        self.actionAnnToolbarVisible.setCheckable(True)
        self.actionAnnToolbarVisible.setObjectName(_fromUtf8("actionAnnToolbarVisible"))
        self.actionAnnToolbarAlign_right = QtGui.QAction(MainWindow)
        self.actionAnnToolbarAlign_right.setCheckable(True)
        self.actionAnnToolbarAlign_right.setObjectName(_fromUtf8("actionAnnToolbarAlign_right"))
        self.actionClinical_information = QtGui.QAction(MainWindow)
        self.actionClinical_information.setCheckable(True)
        self.actionClinical_information.setObjectName(_fromUtf8("actionClinical_information"))
        self.actionEllipseNote = QtGui.QAction(MainWindow)
        self.actionEllipseNote.setCheckable(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/ellipse-note-icon.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEllipseNote.setIcon(icon14)
        self.actionEllipseNote.setObjectName(_fromUtf8("actionEllipseNote"))
        self.actionFloating_Baseline = QtGui.QAction(MainWindow)
        self.actionFloating_Baseline.setCheckable(True)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/floating_baseline.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFloating_Baseline.setIcon(icon15)
        self.actionFloating_Baseline.setObjectName(_fromUtf8("actionFloating_Baseline"))
        self.actionAcceleration = QtGui.QAction(MainWindow)
        self.actionAcceleration.setCheckable(True)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/acceleration.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAcceleration.setIcon(icon16)
        self.actionAcceleration.setObjectName(_fromUtf8("actionAcceleration"))
        self.actionDeceleration = QtGui.QAction(MainWindow)
        self.actionDeceleration.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/deceleration.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeceleration.setIcon(icon17)
        self.actionDeceleration.setObjectName(_fromUtf8("actionDeceleration"))
        self.actionUA = QtGui.QAction(MainWindow)
        self.actionUA.setCheckable(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/uterine_contraction.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUA.setIcon(icon18)
        self.actionUA.setObjectName(_fromUtf8("actionUA"))
        self.actionCaliper = QtGui.QAction(MainWindow)
        self.actionCaliper.setCheckable(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/caliper.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCaliper.setIcon(icon19)
        self.actionCaliper.setObjectName(_fromUtf8("actionCaliper"))
        self.actionCaliperFHR = QtGui.QAction(MainWindow)
        self.actionCaliperFHR.setCheckable(True)
        self.actionCaliperFHR.setObjectName(_fromUtf8("actionCaliperFHR"))
        self.actionCaliperTOCO = QtGui.QAction(MainWindow)
        self.actionCaliperTOCO.setCheckable(True)
        self.actionCaliperTOCO.setObjectName(_fromUtf8("actionCaliperTOCO"))
        self.actionFIGO_acc_dec = QtGui.QAction(MainWindow)
        self.actionFIGO_acc_dec.setObjectName(_fromUtf8("actionFIGO_acc_dec"))
        self.actionFIGO_UA = QtGui.QAction(MainWindow)
        self.actionFIGO_UA.setObjectName(_fromUtf8("actionFIGO_UA"))
        self.actionCaliperReset = QtGui.QAction(MainWindow)
        self.actionCaliperReset.setObjectName(_fromUtf8("actionCaliperReset"))
        self.actionAnnShowHide = QtGui.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(_fromUtf8(":/actions/icons/ann_visibility.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAnnShowHide.setIcon(icon20)
        self.actionAnnShowHide.setObjectName(_fromUtf8("actionAnnShowHide"))
        self.actionDebug_CalibSignal = QtGui.QAction(MainWindow)
        self.actionDebug_CalibSignal.setObjectName(_fromUtf8("actionDebug_CalibSignal"))
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionOpen_folder)
        self.menuFile.addAction(self.actionExport_to_PDF)
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionAbout)
        self.menuPaper_format.addAction(self.actionEU)
        self.menuPaper_format.addAction(self.actionUS)
        self.menuAnnotation_Toolbar.addAction(self.actionAnnToolbarVisible)
        self.menuAnnotation_Toolbar.addAction(self.actionAnnToolbarAlign_right)
        self.menuView.addAction(self.actionClinical_information)
        self.menuView.addAction(self.actionData_browser)
        self.menuView.addAction(self.menuPaper_format.menuAction())
        self.menuView.addAction(self.menuAnnotation_Toolbar.menuAction())
        self.menuTools.addAction(self.actionAttribute_selection)
        self.menuTools.addAction(self.actionConvert_files)
        self.menuTools.addAction(self.actionDownload_CTU_UHB_data)
        self.menuTools.addAction(self.actionSent_annotations)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionCursor)
        self.toolBar.addAction(self.actionBasal)
        self.toolBar.addAction(self.actionBaseline)
        self.toolBar.addAction(self.actionRecovery)
        self.toolBar.addAction(self.actionNo_recovery)
        self.toolBar.addAction(self.actionExcessive_UA)
        self.toolBar.addAction(self.actionEllipseNote)
        self.toolBar.addAction(self.actionNote)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCaliper)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionDelete)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionFloating_Baseline)
        self.toolBar.addAction(self.actionAcceleration)
        self.toolBar.addAction(self.actionDeceleration)
        self.toolBar.addAction(self.actionUA)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "CTGViewerLite", None))
        self.menuFile.setTitle(_translate("MainWindow", "File", None))
        self.menuHelp.setTitle(_translate("MainWindow", "Help", None))
        self.menuView.setTitle(_translate("MainWindow", "View", None))
        self.menuPaper_format.setTitle(_translate("MainWindow", "Paper format", None))
        self.menuAnnotation_Toolbar.setTitle(_translate("MainWindow", "Annotation Toolbar", None))
        self.menuTools.setTitle(_translate("MainWindow", "Tools", None))
        self.dockClinInfo.setWindowTitle(_translate("MainWindow", "Clinical information", None))
        self.dockDataBrowser.setWindowTitle(_translate("MainWindow", "Data browser", None))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar", None))
        self.actionOpen.setText(_translate("MainWindow", "&Open file", None))
        self.actionOpen.setIconText(_translate("MainWindow", "Open file", None))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O", None))
        self.actionClose.setText(_translate("MainWindow", "&Close", None))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+W", None))
        self.actionQuit.setText(_translate("MainWindow", "&Quit", None))
        self.actionQuit.setToolTip(_translate("MainWindow", "Quit", None))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q", None))
        self.actionAbout.setText(_translate("MainWindow", "About", None))
        self.actionConvert_files.setText(_translate("MainWindow", "Convert files", None))
        self.actionOpen_folder.setText(_translate("MainWindow", "Open folder", None))
        self.actionOpen_folder.setShortcut(_translate("MainWindow", "Ctrl+Alt+O", None))
        self.actionAttribute_selection.setText(_translate("MainWindow", "Attribute selection", None))
        self.actionDownload_CTU_UHB_data.setText(_translate("MainWindow", "Download CTU-UHB data", None))
        self.actionData_browser.setText(_translate("MainWindow", "Data browser", None))
        self.actionExport_to_PDF.setText(_translate("MainWindow", "Export to PDF", None))
        self.actionExport_to_PDF.setShortcut(_translate("MainWindow", "Ctrl+Shift+E", None))
        self.actionEU.setText(_translate("MainWindow", "EU (1cm/min, 20bpm/cm)", None))
        self.actionEU.setToolTip(_translate("MainWindow", "EU (1cm/min., 20bpm/cm)", None))
        self.actionUS.setText(_translate("MainWindow", "US (3cm/min, 30bpm/cm)", None))
        self.actionUS.setToolTip(_translate("MainWindow", "US (3cm/min., 30bpm/cm)", None))
        self.actionSet_Clear_Baseline.setText(_translate("MainWindow", "Set/Clear Baseline", None))
        self.actionSet_Clear_Baseline.setShortcut(_translate("MainWindow", "Ctrl+B", None))
        self.actionBasal.setText(_translate("MainWindow", "basal", None))
        self.actionBasal.setIconText(_translate("MainWindow", "Basal", None))
        self.actionBasal.setToolTip(_translate("MainWindow", "Draw basal heart rate line", None))
        self.actionBaseline.setText(_translate("MainWindow", "baseline", None))
        self.actionBaseline.setIconText(_translate("MainWindow", "Baseline", None))
        self.actionBaseline.setToolTip(_translate("MainWindow", "Draw a baseline (B)", None))
        self.actionBaseline.setShortcut(_translate("MainWindow", "B", None))
        self.actionRecovery.setText(_translate("MainWindow", "recovery", None))
        self.actionRecovery.setIconText(_translate("MainWindow", "Recovery", None))
        self.actionRecovery.setToolTip(_translate("MainWindow", "Recovery (R)", None))
        self.actionRecovery.setShortcut(_translate("MainWindow", "R", None))
        self.actionCursor.setText(_translate("MainWindow", "select", None))
        self.actionCursor.setIconText(_translate("MainWindow", "Select", None))
        self.actionCursor.setToolTip(_translate("MainWindow", "Select and move (S)", None))
        self.actionCursor.setShortcut(_translate("MainWindow", "S", None))
        self.actionNote.setText(_translate("MainWindow", "note", None))
        self.actionNote.setIconText(_translate("MainWindow", "Note", None))
        self.actionNote.setToolTip(_translate("MainWindow", "Add note", None))
        self.actionSave.setText(_translate("MainWindow", "save", None))
        self.actionSave.setIconText(_translate("MainWindow", "Save", None))
        self.actionSave.setToolTip(_translate("MainWindow", "Save all changes", None))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S", None))
        self.actionDelete.setText(_translate("MainWindow", "Delete", None))
        self.actionDelete.setIconText(_translate("MainWindow", "Delete All", None))
        self.actionDelete.setToolTip(_translate("MainWindow", "Delete all annotations", None))
        self.actionSent_annotations.setText(_translate("MainWindow", "Sent annotations", None))
        self.actionNo_recovery.setText(_translate("MainWindow", "No recovery", None))
        self.actionEllipse.setText(_translate("MainWindow", "Mark", None))
        self.actionEllipse.setToolTip(_translate("MainWindow", "Draw mark (ellipse)", None))
        self.actionExcessive_UA.setText(_translate("MainWindow", "Excessive UA", None))
        self.actionExcessive_UA.setToolTip(_translate("MainWindow", "Excessive uterine contractions", None))
        self.actionAnnToolbarVisible.setText(_translate("MainWindow", "Show/hide", None))
        self.actionAnnToolbarVisible.setToolTip(_translate("MainWindow", "Show/hide annotation toolbar and annotations", None))
        self.actionAnnToolbarAlign_right.setText(_translate("MainWindow", "Align right", None))
        self.actionClinical_information.setText(_translate("MainWindow", "Clinical information", None))
        self.actionEllipseNote.setText(_translate("MainWindow", "Mark ", None))
        self.actionEllipseNote.setToolTip(_translate("MainWindow", "Mark with note", None))
        self.actionFloating_Baseline.setText(_translate("MainWindow", "Float. Baseline", None))
        self.actionFloating_Baseline.setToolTip(_translate("MainWindow", "Add Floating Baseline (F)", None))
        self.actionFloating_Baseline.setShortcut(_translate("MainWindow", "F", None))
        self.actionAcceleration.setText(_translate("MainWindow", "Accel", None))
        self.actionAcceleration.setToolTip(_translate("MainWindow", "Add acceleration (A)", None))
        self.actionAcceleration.setShortcut(_translate("MainWindow", "A", None))
        self.actionDeceleration.setText(_translate("MainWindow", "Decel", None))
        self.actionDeceleration.setToolTip(_translate("MainWindow", "Add deceleration (D)", None))
        self.actionDeceleration.setShortcut(_translate("MainWindow", "D", None))
        self.actionUA.setText(_translate("MainWindow", "UA", None))
        self.actionUA.setToolTip(_translate("MainWindow", "Add uterine contraction (U)", None))
        self.actionUA.setShortcut(_translate("MainWindow", "U", None))
        self.actionCaliper.setText(_translate("MainWindow", "Caliper", None))
        self.actionCaliper.setToolTip(_translate("MainWindow", "Caliper (C)", None))
        self.actionCaliper.setShortcut(_translate("MainWindow", "C", None))
        self.actionCaliperFHR.setText(_translate("MainWindow", "FHR", None))
        self.actionCaliperFHR.setToolTip(_translate("MainWindow", "Enable caliper FHR", None))
        self.actionCaliperTOCO.setText(_translate("MainWindow", "TOCO", None))
        self.actionCaliperTOCO.setToolTip(_translate("MainWindow", "Enable caliper TOCO", None))
        self.actionFIGO_acc_dec.setText(_translate("MainWindow", "FIGO acc/dec", None))
        self.actionFIGO_acc_dec.setToolTip(_translate("MainWindow", "FIGO requirements for acc/dec", None))
        self.actionFIGO_UA.setText(_translate("MainWindow", "FIGO UA", None))
        self.actionFIGO_UA.setToolTip(_translate("MainWindow", "Requirements for uterine contractions", None))
        self.actionCaliperReset.setText(_translate("MainWindow", "Reset caliper", None))
        self.actionCaliperReset.setToolTip(_translate("MainWindow", "Reset caliper settings", None))
        self.actionAnnShowHide.setText(_translate("MainWindow", "Show/hide", None))
        self.actionAnnShowHide.setToolTip(_translate("MainWindow", "Show/hide annotations", None))
        self.actionDebug_CalibSignal.setText(_translate("MainWindow", "Plot calibration signal", None))
        self.actionDebug_CalibSignal.setToolTip(_translate("MainWindow", "Plot calibration signal", None))

from PlotWidget import PlotWidget
import resources_rc
